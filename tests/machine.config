#!/bin/bash
set -eux

if [[ $MACHINE_ID = wcoss2 ]]; then

  module load ecflow/5.6.0.13
  module load intel/19.1.3.304 python/3.8.6
  ECFLOW_START=${ECF_ROOT}/scripts/server_check.sh
  export ECF_OUTPUTDIR=${PATHRT}/ecf_outputdir
  export ECF_COMDIR=${PATHRT}/ecf_comdir
  rm -rf ${ECF_OUTPUTDIR} ${ECF_COMDIR}
  mkdir -p ${ECF_OUTPUTDIR}
  mkdir -p ${ECF_COMDIR}
  export colonifnco=":output"  # hack

  DISKNM=/lfs/h2/emc/nems/noscrub/emc.nems/RT
  QUEUE=dev
  COMPILE_QUEUE=dev
  ROCOTO_SCHEDULER=pbs
  PARTITION=
  STMP=/lfs/h2/emc/ptmp
  PTMP=/lfs/h2/emc/ptmp
  SCHEDULER=pbs

elif [[ $MACHINE_ID = acorn ]]; then

  module load ecflow/5.6.0.13
  module load intel/19.1.3.304 python/3.8.6
  ECFLOW_START=${ECF_ROOT}/scripts/server_check.sh
  export ECF_OUTPUTDIR=${PATHRT}/ecf_outputdir
  export ECF_COMDIR=${PATHRT}/ecf_comdir
  rm -rf ${ECF_OUTPUTDIR} ${ECF_COMDIR}
  mkdir -p ${ECF_OUTPUTDIR}
  mkdir -p ${ECF_COMDIR}
  export colonifnco=":output"  # hack

  DISKNM=/lfs/h1/emc/nems/noscrub/emc.nems/RT
  QUEUE=dev
  COMPILE_QUEUE=dev
  ROCOTO_SCHEDULER=pbs
  PARTITION=
  STMP=/lfs/h2/emc/ptmp
  PTMP=/lfs/h2/emc/ptmp
  SCHEDULER=pbs

elif [[ $MACHINE_ID = gaea ]]; then

  module use /ncrc/proj/epic/rocoto/modulefiles
  module load rocoto
  ROCOTORUN=$(which rocotorun)
  ROCOTOSTAT=$(which rocotostat)
  ROCOTOCOMPLETE=$(which rocotocomplete)
  ROCOTO_SCHEDULER=slurm

  
  module load PrgEnv-intel/8.3.3
  module load intel-classic/2023.1.0
  module load cray-mpich/8.1.25
  module load python/3.9.12
  module use /ncrc/proj/epic/spack-stack/modulefiles
  module load gcc/12.2.0
  module load ecflow/5.8.4
  ECFLOW_START=/ncrc/proj/epic/spack-stack/ecflow-5.8.4/bin/ecflow_start.sh
  ECF_PORT=$(( $(id -u) + 1500 ))

  DISKNM=/gpfs/f5/epic/world-shared/UFS-WM_RT
  QUEUE=normal
  COMPILE_QUEUE=normal
  PARTITION=c5
  STMP=/gpfs/f5/epic/scratch
  PTMP=/gpfs/f5/epic/scratch

  SCHEDULER=slurm

elif [[ $MACHINE_ID = hera ]]; then

  module load rocoto
  ROCOTORUN=$(which rocotorun)
  ROCOTOSTAT=$(which rocotostat)
  ROCOTOCOMPLETE=$(which rocotocomplete)
  ROCOTO_SCHEDULER=slurm

  module load ecflow/5.5.3
  ECFLOW_START=ecflow_start.sh

  QUEUE=batch
  COMPILE_QUEUE=batch

  PARTITION=
  dprefix=/scratch1/NCEPDEV
  DISKNM=/scratch2/NAGAPE/epic/UFS-WM_RT
  STMP=$dprefix/stmp4
  PTMP=$dprefix/stmp2

  SCHEDULER=slurm

elif [[ $MACHINE_ID = orion ]]; then

  module load git/2.28.0
  module load gcc/10.2.0
  module load python/3.9.2

  module load contrib rocoto
  ROCOTORUN=$(which rocotorun)
  ROCOTOSTAT=$(which rocotostat)
  ROCOTOCOMPLETE=$(which rocotocomplete)
  ROCOTO_SCHEDULER=slurm

  module use /work/noaa/epic/role-epic/spack-stack/orion/modulefiles
  module load ecflow/5.8.4
  ECFLOW_START=/work/noaa/epic/role-epic/spack-stack/orion/ecflow-5.8.4/bin/ecflow_start.sh
  ECF_PORT=$(( $(id -u) + 1500 ))

  QUEUE=batch
  COMPILE_QUEUE=batch
  PARTITION=orion
  dprefix=/work/noaa/stmp/${USER}
  DISKNM=/work/noaa/epic/UFS-WM_RT
  STMP=$dprefix/stmp
  PTMP=$dprefix/stmp

  SCHEDULER=slurm

elif [[ $MACHINE_ID = hercules ]]; then

  module load contrib rocoto
  ROCOTORUN=$(which rocotorun)
  ROCOTOSTAT=$(which rocotostat)
  ROCOTOCOMPLETE=$(which rocotocomplete)
  ROCOTO_SCHEDULER=slurm

  module use /work/noaa/epic/role-epic/spack-stack/hercules/modulefiles
  module load ecflow/5.8.4
  ECFLOW_START=/work/noaa/epic/role-epic/spack-stack/hercules/ecflow-5.8.4/bin/ecflow_start.sh
  ECF_PORT=$(( $(id -u) + 1500 ))

  QUEUE=batch
  COMPILE_QUEUE=batch
  PARTITION=hercules
  dprefix=/work2/noaa/stmp/${USER}
  DISKNM=/work/noaa/epic/hercules/UFS-WM_RT
  STMP=$dprefix/stmp
  PTMP=$dprefix/stmp

  SCHEDULER=slurm
  cp fv3_conf/fv3_slurm.IN_hercules fv3_conf/fv3_slurm.IN
  cp fv3_conf/compile_slurm.IN_hercules fv3_conf/compile_slurm.IN

elif [[ $MACHINE_ID = jet ]]; then

  echo "=======Running on $(lsb_release -is)======="
  CurJetOS=$(lsb_release -is)
  if [[ ${CurJetOS} == "CentOS" ]]; then
  echo "=======Please, move to Rocky8 node fe[5-8]======="
  exit 1
  fi
  
  module load rocoto
  ROCOTORUN=$(which rocotorun)
  ROCOTOSTAT=$(which rocotostat)
  ROCOTOCOMPLETE=$(which rocotocomplete)
  ROCOTO_SCHEDULER=slurm

  module load ecflow/5.11.4
  ECFLOW_START=/apps/ecflow/5.11.4/bin/ecflow_start.sh

  module use /mnt/lfs4/HFIP/hfv3gfs/role.epic/spack-stack/spack-stack-1.5.0/envs/unified-env-rocky8/install/modulefiles/Core
  module load stack-intel/2021.5.0
  module load stack-python/3.10.8

  QUEUE=batch
  COMPILE_QUEUE=batch
  PARTITION=xjet
  DISKNM=/mnt/lfs4/HFIP/hfv3gfs/role.epic/RT
  dprefix=${dprefix:-/lfs4/HFIP/$ACCNR/$USER}
  STMP=${STMP:-$dprefix/RT_BASELINE}
  PTMP=${PTMP:-$dprefix/RT_RUNDIRS}

  SCHEDULER=slurm

elif [[ $MACHINE_ID = s4 ]]; then

  module load rocoto/1.3.2
  module load ecflow/5.6.0
  module load miniconda/3.8-s4
  ROCOTORUN=$(which rocotorun)
  ROCOTOSTAT=$(which rocotostat)
  ROCOTOCOMPLETE=$(which rocotocomplete)
  ROCOTO_SCHEDULER=slurm

  module use /data/prod/jedi/spack-stack/modulefiles
  module load ecflow/5.8.4
  ECFLOW_START=/data/prod/jedi/spack-stack/ecflow-5.8.4/bin/ecflow_start.sh
  ECF_PORT=$(( $(id -u) + 1500 ))

  QUEUE=s4
  COMPILE_QUEUE=s4

  PARTITION=s4
  dprefix=/data/prod
  DISKNM=$dprefix/emc.nemspara/RT
  STMP=/scratch/short/users
  PTMP=/scratch/users

  SCHEDULER=slurm

elif [[ $MACHINE_ID = derecho ]]; then

  module use /glade/work/epicufsrt/contrib/derecho/rocoto/modulefiles
  module load rocoto
  module use /glade/work/epicufsrt/contrib/spack-stack/derecho/modulefiles
  module load ecflow/5.8.4
  module unload ncarcompilers
  module use /glade/work/epicufsrt/contrib/spack-stack/derecho/spack-stack-1.5.1/envs/unified-env/install/modulefiles/Core
  module load stack-intel/2021.10.0
  module load stack-python/3.10.8
#  export PYTHONPATH=/glade/p/ral/jntp/tools/miniconda3/4.8.3/envs/ufs-weather-model/lib/python3.8/site-packages:/glade/p/ral/jntp/tools/miniconda3/4.8.3/lib/python3.8/site-packages
  ECFLOW_START=/glade/work/epicufsrt/contrib/spack-stack/derecho/ecflow-5.8.4/bin/ecflow_start.sh
  ECF_PORT=$(( $(id -u) + 1500 ))

  QUEUE=main
  COMPILE_QUEUE=main
  PARTITION=
  dprefix=/glade/derecho/scratch
  DISKNM=/glade/derecho/scratch/epicufsrt/ufs-weather-model/RT/
  STMP=$dprefix
  PTMP=$dprefix
  SCHEDULER=pbs
  cp fv3_conf/fv3_qsub.IN_derecho fv3_conf/fv3_qsub.IN
  cp fv3_conf/compile_qsub.IN_derecho fv3_conf/compile_qsub.IN

  ROCOTORUN=$(which rocotorun)
  ROCOTOSTAT=$(which rocotostat)
  ROCOTOCOMPLETE=$(which rocotocomplete)
  ROCOTO_SCHEDULER=pbspro

elif [[ $MACHINE_ID = stampede ]]; then

  export PYTHONPATH=
  ECFLOW_START=
  QUEUE=skx-normal
  COMPILE_QUEUE=skx-dev
  PARTITION=
  dprefix=$SCRATCH/ufs-weather-model/run
  DISKNM=/work2/07736/minsukji/stampede2/ufs-weather-model/RT
  STMP=$dprefix
  PTMP=$dprefix
  SCHEDULER=slurm
  MPIEXEC=ibrun
  MPIEXECOPTS=

elif [[ $MACHINE_ID = expanse ]]; then

  export PYTHONPATH=
  ECFLOW_START=
  QUEUE=compute
  COMPILE_QUEUE=shared
  PARTITION=
  dprefix=/expanse/lustre/scratch/$USER/temp_project/run
  DISKNM=/expanse/lustre/scratch/domh/temp_project/RT
  STMP=$dprefix
  PTMP=$dprefix
  SCHEDULER=slurm

 elif [[ $MACHINE_ID = noaacloud ]]; then

  export PATH=/contrib/EPIC/bin:$PATH
  module use /apps/modules/modulefiles
  module load rocoto/1.3.3

  ROCOTORUN=$(which rocotorun)
  ROCOTOSTAT=$(which rocotostat)
  ROCOTOCOMPLETE=$(which rocotocomplete)
  ROCOTO_SCHEDULER=slurm

  QUEUE=batch
  COMPILE_QUEUE=batch
  PARTITION=
  dprefix=/lustre/
  DISKNM=/contrib/ufs-weather-model/RT
  STMP=$dprefix/stmp4
  PTMP=$dprefix/stmp2
  SCHEDULER=slurm


else
  die "Unknown machine ID, please edit detect_machine.sh file"
fi
